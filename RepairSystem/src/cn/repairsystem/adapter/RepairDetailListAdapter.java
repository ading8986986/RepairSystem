package cn.repairsystem.adapter;import java.util.List;import cn.repairsystem.R;import cn.repairsystem.bean.RepairDetailItem;import cn.repairsystem.bean.RepairDetailListItem;import android.annotation.SuppressLint;import android.content.Context;import android.util.Log;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;public class RepairDetailListAdapter extends BaseAdapter{	private String TAG = "RepairDetailListAdapter";	private Context context;	private List<RepairDetailListItem> datalist;	private RepairDetailItem repairDetailItem;	private int curState;	private int[] grayStateImage = new int[]{			R.drawable.submit,			R.drawable.to_be_accepted1,			R.drawable.to_be_assigned1,			R.drawable.to_be_finished1,			R.drawable.repairing1,			R.drawable.finished1,			R.drawable.callback1,			R.drawable.comment1,			R.drawable.rejected,			R.drawable.pause	};		private int[] orangeStateImage = new int[]{			R.drawable.submit,			R.drawable.to_be_accepted0,			R.drawable.to_be_assigned0,			R.drawable.to_be_finished0,			R.drawable.repairing0,			R.drawable.finished0,			R.drawable.callback0,			R.drawable.comment0,			R.drawable.rejected,			R.drawable.pause	};		public RepairDetailListAdapter(Context context) {		// TODO Auto-generated constructor stub		this.context = context;	}		@Override	public int getCount() {		// TODO Auto-generated method stub		return datalist == null?0:datalist.size()+1;	}	@Override	public RepairDetailListItem getItem(int position) {		// TODO Auto-generated method stub		return datalist== null?null:datalist.get(position);	}		public void setData(List<RepairDetailListItem> datalist,int curState,RepairDetailItem repairDetailItem) {		this.datalist = datalist;		this.curState = curState;		this.repairDetailItem = repairDetailItem;		notifyDataSetChanged();	}		@Override	public long getItemId(int position) {		// TODO Auto-generated method stub		return 0;	}	@SuppressLint("ResourceAsColor")	@Override	public View getView(int position, View convertView, ViewGroup parent) {		// TODO Auto-generated method stub		if(position < datalist.size()){			Log.i(TAG,"state"+getItem(position).state+";curState="+curState);			ViewHolder holder;			if(null == convertView){				convertView = LinearLayout.inflate(context, R.layout.detail_list_item, null);				holder = new ViewHolder(convertView);				convertView.setTag(holder);			}			else {				holder  = (ViewHolder) convertView.getTag();			}									if(getItem(position).state<=curState){				holder.stateImageView.setBackgroundResource(orangeStateImage[getItem(position).state-1]);				holder.toplineImageView.setBackgroundResource(R.color.orange);				holder.bottomlineImageView.setBackgroundResource(R.color.orange);			}			else {				holder.stateImageView.setBackgroundResource(grayStateImage[getItem(position).state-1]);				holder.toplineImageView.setBackgroundResource(R.color.gray00);				holder.bottomlineImageView.setBackgroundResource(R.color.gray00);			}			if( 0 == position){				holder.toplineImageView.setVisibility(View.GONE);			}			else {				holder.toplineImageView.setVisibility(View.VISIBLE);			}			if( datalist.size()-1 == position){				holder.bottomlineImageView.setVisibility(View.GONE);			}			else {				holder.bottomlineImageView.setVisibility(View.VISIBLE);			}			holder.titleTextView.setText(getItem(position).title);			holder.contenTextView.setText(getItem(position).content);			return convertView;		}		else {			return getFooterView();		}	}		private class ViewHolder{		public ImageView stateImageView;		public ImageView toplineImageView;		public ImageView bottomlineImageView;		public TextView titleTextView;		public TextView contenTextView;				public ViewHolder(View convertView) {			// TODO Auto-generated constructor stub			stateImageView = (ImageView) convertView.findViewById(R.id.state_image);			toplineImageView = (ImageView) convertView.findViewById(R.id.topline);			bottomlineImageView = (ImageView) convertView.findViewById(R.id.bottomline);			titleTextView = (TextView) convertView.findViewById(R.id.state_word);			contenTextView = (TextView) convertView.findViewById(R.id.content);		}	}		private View getFooterView(){		View view = LinearLayout.inflate(context, R.layout.detailactivity_footerview, null);		FooterViewHolder holder = new FooterViewHolder(view);		return view;	}		private class FooterViewHolder{		public TextView repairLocationTextView;		public TextView repairProjectTextView;		public TextView repairDesTextView;				public FooterViewHolder(View view) {			// TODO Auto-generated constructor stub			repairLocationTextView = (TextView) view.findViewById(R.id.repair_location);			repairProjectTextView = (TextView) view.findViewById(R.id.repair_project);			repairDesTextView = (TextView) view.findViewById(R.id.repair_dec);			repairLocationTextView.setText(repairDetailItem.buildname);			repairProjectTextView.setText(repairDetailItem.bxtitle);			repairDesTextView.setText(repairDetailItem.bxcontent);		}	}}