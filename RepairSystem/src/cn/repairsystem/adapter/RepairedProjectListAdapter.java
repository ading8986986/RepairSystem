package cn.repairsystem.adapter;import java.util.ArrayList;import java.util.List;import java.util.zip.Inflater;import cn.repairsystem.R;import cn.repairsystem.bean.CurrentRepairItem;import android.content.Context;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;public class RepairedProjectListAdapter extends BaseAdapter {	private ArrayList<CurrentRepairItem> list;	private Context context;		public RepairedProjectListAdapter(Context context) {		// TODO Auto-generated constructor stub		this.context = context;	}		public void setList(List<CurrentRepairItem> list) {		this.list = (ArrayList<CurrentRepairItem>) list;		notifyDataSetChanged();	}				@Override	public int getCount() {		// TODO Auto-generated method stub		return (list == null)?0:list.size();	}	@Override	public CurrentRepairItem getItem(int position) {		// TODO Auto-generated method stub		return (list == null)?null:list.get(position);	}	@Override	public long getItemId(int position) {		// TODO Auto-generated method stub		return 0;	}	@Override	public View getView(int position, View convertView, ViewGroup parent) {		// TODO Auto-generated method stub		ViewHolder holder;		if(convertView == null){			convertView = RelativeLayout.inflate(context, R.layout.record_listitem,null);			holder = new ViewHolder(convertView);			convertView.setTag(holder);		}		else holder = (ViewHolder) convertView.getTag();		switch (getItem(position).getState()) {		case 1:			holder.stateImageView.setBackgroundResource(R.drawable.submit);			break;		case 2:			holder.stateImageView.setBackgroundResource(R.drawable.to_be_accepted0);			break;		case 3:			holder.stateImageView.setBackgroundResource(R.drawable.to_be_assigned0);			break;		case 4:			holder.stateImageView.setBackgroundResource(R.drawable.to_be_finished0);			break;		case 5:			holder.stateImageView.setBackgroundResource(R.drawable.repairing0);			break;		case 6:			holder.stateImageView.setBackgroundResource(R.drawable.finished0);			break;		case 7:			holder.stateImageView.setBackgroundResource(R.drawable.callback0);			break;		case 8:			holder.stateImageView.setBackgroundResource(R.drawable.comment0);			break;		case 9:			holder.stateImageView.setBackgroundResource(R.drawable.rejected);			break;		case 10:			holder.stateImageView.setBackgroundResource(R.drawable.pause);			break;		default:			break;		}		holder.timeTextView.setText(getItem(position).getTime());		holder.titleTextView.setText(getItem(position).getTitle());		return convertView;	}		private class ViewHolder{		public ImageView stateImageView;		public TextView titleTextView;		public TextView timeTextView;				public ViewHolder(View view) {			// TODO Auto-generated constructor stub			stateImageView = (ImageView) view.findViewById(R.id.state);			titleTextView = (TextView) view.findViewById(R.id.title);			timeTextView = (TextView) view.findViewById(R.id.time);		}			}}