package cn.repairsystem.fragment;import java.util.ArrayList;import java.util.List;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import cn.repairsystem.R;import cn.repairsystem.activity.RepairDetailActivity;import cn.repairsystem.adapter.RepairedProjectListAdapter;import cn.repairsystem.bean.CurrentRepairItem;import cn.repairsystem.network.HttpController;import cn.repairsystem.network.HttpController.HttpResultListener;import cn.repairsystem.pulltorefresh.library.PullToRefreshBase;import cn.repairsystem.pulltorefresh.library.PullToRefreshBase.OnRefreshListener;import cn.repairsystem.pulltorefresh.library.PullToRefreshListView;import cn.repairsystem.util.UtilToast;import cn.repairsystem.pulltorefresh.library.PullToRefreshBase.Mode;import android.content.Intent;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.LinearLayout;import android.widget.AdapterView.OnItemClickListener;import android.widget.ListView;public class RepairRecordFragment extends Fragment implements OnItemClickListener,HttpResultListener, OnRefreshListener<ListView>{		private String TAG  = "RepairRecordFragment";	private View mView;	private PullToRefreshListView refreshListView;	private ListView listView;		private RepairedProjectListAdapter mAdapter;	private List<CurrentRepairItem> dataList;	private HttpController mController;	private int pageindex;	private boolean isTheEnd;//是否没有更多数据	private LinearLayout waitingLayout;		@Override	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		// TODO Auto-generated method stub		mView = View.inflate(getActivity(), R.layout.record_fragment, null);		initView();		initData();		return mView;	}		private void initView(){		refreshListView = (PullToRefreshListView) mView.findViewById(R.id.content);		refreshListView.setOnRefreshListener(this);		refreshListView.setMode(Mode.PULL_FROM_END);		refreshListView.getLoadingLayoutProxy().setPullLabel("下拉刷新");		listView = refreshListView.getRefreshableView();		waitingLayout = (LinearLayout) mView.findViewById(R.id.ll_waiting_layout);		listView.setOnItemClickListener(this);	}		private void initData(){		if (mController == null) { 			mController = HttpController.getInstance(getActivity());		}		mAdapter = new RepairedProjectListAdapter(getActivity());		listView.setAdapter(mAdapter);		isTheEnd = false;		pageindex = 1;		//getRepairedProjectData();			}		public List<CurrentRepairItem> getDataList() {		return dataList;	}	@Override	public void onItemClick(AdapterView<?> parent, View view, int position,			long id) {		// TODO Auto-generated method stub		Intent intent = new Intent(getActivity(),RepairDetailActivity.class);		intent.putExtra("repaireId", dataList.get(position).getId());		startActivity(intent);			}		/**	 * 同步报修项目	 * **/	public void getRepairedProjectData(){		Log.i(TAG,"pageindex="+pageindex);		waitingLayout.setVisibility(View.VISIBLE);		JSONObject param = new JSONObject();		try {			param.put("pageindex", pageindex);		} catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		mController.getRepairedProject(this, param);	}	@Override	public void onResult(boolean isSuccess, JSONObject object) {		// TODO Auto-generated method stub		waitingLayout.setVisibility(View.GONE);		refreshListView.onRefreshComplete();		try {			if(isSuccess &&object.get("bxlist") != null){				JSONObject dataObject = object.getJSONObject("bxlist");				if(dataObject.getJSONArray("result").length() == 0){					//没有更多数据了					isTheEnd = true;					UtilToast.showShort(getActivity(), R.string.no_more);					return;				}				else{					if(dataList == null ) 						dataList = new ArrayList<CurrentRepairItem>();					//else dataList.clear();					pageindex++;					for (int i = 0; i < dataObject.getJSONArray("result").length(); i++) {												try {							dataList.add(new CurrentRepairItem((JSONArray) dataObject.getJSONArray("result").get(i)));						} catch (JSONException e) {							// TODO Auto-generated catch block							e.printStackTrace();						}					}					mAdapter.setList(dataList);				}							}			else UtilToast.showShort(getActivity(), "获取数据失败");		}		catch (JSONException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}	}	@Override	public void onRefresh(PullToRefreshBase<ListView> refreshView) {		// TODO Auto-generated method stub		getRepairedProjectData();	}}