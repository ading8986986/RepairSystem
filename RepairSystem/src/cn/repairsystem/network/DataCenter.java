package cn.repairsystem.network;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import cn.repairsystem.bean.CurrentRepairItem;import cn.repairsystem.bean.RepairBuilding;import cn.repairsystem.bean.RepairProjectItem;import cn.repairsystem.bean.RepairSubProject;import cn.repairsystem.bean.RepairZoneItem;public class DataCenter {	private List<RepairZoneItem> repairZoneList;	private List<RepairProjectItem> repairProjectList;	private List<CurrentRepairItem> currentRepairItems ;		private Map<Integer, ArrayList<RepairBuilding>> zoneBuildingMap;	private Map<Integer, ArrayList<RepairSubProject>> repairSubProjectMap;				private static DataCenter dataCenter;		public static DataCenter getInstance(){		if(null == dataCenter){			synchronized (DataCenter.class) {				dataCenter = new DataCenter();			}		}		return dataCenter;	}		public void setRepairZoneList(JSONArray array){		if(repairZoneList == null ) {			repairZoneList = new ArrayList<RepairZoneItem>();		}		else {			repairZoneList.clear();		}		for (int i = 0; i < array.length(); i++) {			try {				repairZoneList.add(new RepairZoneItem(array.getJSONObject(i)));			} catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}		}	}		public void setRepairProjectList(JSONArray array){		if(repairProjectList == null ){			repairProjectList = new ArrayList<RepairProjectItem>();		}		else{			repairProjectList.clear();		}		for (int i = 0; i < array.length(); i++) {			try {				repairProjectList.add(new RepairProjectItem(array.getJSONObject(i)));			} catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}		}			}		public void setCurrentRepairItems(JSONArray array) {		if(currentRepairItems == null )currentRepairItems = new ArrayList<CurrentRepairItem>();		for (int i = 0; i < array.length(); i++) {						try {				currentRepairItems.add(new CurrentRepairItem((JSONArray) array.get(i)));			} catch (JSONException e) {				// TODO Auto-generated catch block				e.printStackTrace();			}		}			}			public List<RepairZoneItem> getRepairZoneList() {		return repairZoneList;	}		public List<RepairProjectItem> getRepairProjectList() {		return repairProjectList;	}			public List<CurrentRepairItem> getCurrentRepairItems() {		return currentRepairItems;	}		public ArrayList<RepairBuilding> getZoneBuildingById(int id) {		if (zoneBuildingMap == null) {			zoneBuildingMap = new HashMap<Integer, ArrayList<RepairBuilding>>();		}		return zoneBuildingMap.get(id);	}		public void setZoneBuildingMap(int id,ArrayList<RepairBuilding> zoneBuildings) {		if (zoneBuildingMap == null) {			zoneBuildingMap = new HashMap<Integer, ArrayList<RepairBuilding>>();		}		this.zoneBuildingMap.put(id, zoneBuildings);	}		public ArrayList<RepairSubProject> getRepairSubProjectById(int id) {		if (repairSubProjectMap == null) {			repairSubProjectMap = new HashMap<Integer, ArrayList<RepairSubProject>>();		}		return repairSubProjectMap.get(id);	}		public void setRepairSubProjectMap(int id,ArrayList<RepairSubProject> subProjects) {		if (repairSubProjectMap == null) {			repairSubProjectMap = new HashMap<Integer, ArrayList<RepairSubProject>>();		}		this.repairSubProjectMap.put(id, subProjects);	}		}